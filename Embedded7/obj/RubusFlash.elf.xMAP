
# Unreferenced symbols:
	(encoderDriver.c )	[whole file]
	(keyboardDriver.c )	[whole file]
	(motorDriver.c )	[whole file]
	(potentiometerDriver.c )	[whole file]
	(displayDriver.c )	[whole file]
	(ros_services.c )	[whole file]


#>40000000          ___IPSBAR (linker command file)
#>20000000          ___RAMBAR (linker command file)
#>00008000          ___RAMBAR_SIZE (linker command file)
#>00000000          ___FLASHBAR (linker command file)
#>00040000          ___FLASHBAR_SIZE (linker command file)
#>20007FFC          ___SP_AFTER_RESET (linker command file)

# .code

# .ipsbar

# .vectors
  00000000 00000400 .vectorTable _interruptVector	(hal_vector.c)

# .cfmprotect
  00000400 00000018 .cfmconfig _cfm	(cfm.c)

# .text
  00000500 0000002A .text   leds_initialise	(LEDDriver.c)
  0000052A 00000016 .text   leds_output	(LEDDriver.c)
  00000540 000000D2 .text   leds_turnON	(LEDDriver.c)
  00000612 000000D2 .text   leds_turnOFF	(LEDDriver.c)
  000006E4 00000096 .text   xhpCopyIdentifyer	(ros_xhpCmdCtrl.c)
  0000077A 00000010 .text   xhpInit	(ros_xhpCmdCtrl.c)
  0000078A 00000070 .text   xhpCmdCtrlConnect	(ros_xhpCmdCtrl.c)
  000007FA 0000001A .text   xhpCmdCtrlDisconnect	(ros_xhpCmdCtrl.c)
  00000814 0000004A .text   xhpCmdGetInfo	(ros_xhpCmdCtrl.c)
  0000085E 00000032 .text   xhpParseCommand	(ros_xhpCmdCtrl.c)
  00000890 0000008E .text   xhpProcessPackage	(ros_xhpCmdCtrl.c)
  0000091E 0000004A .text   xhpCmdLogSet	(ros_xhpCmdLog.c)
  00000968 00000028 .text   xhpCmdLogSetAll	(ros_xhpCmdLog.c)
  00000990 00000042 .text   xhpCmdLogStart	(ros_xhpCmdLog.c)
  000009D2 0000002E .text   xhpCmdLogStop	(ros_xhpCmdLog.c)
  00000A00 00000076 .text   xhpCmdLogRead	(ros_xhpCmdLog.c)
  00000A76 000000CA .text   xhpCmdLogReadNext	(ros_xhpCmdLog.c)
  00000B40 00000026 .text   xhpHandler_osInit	(ros_xhpHandler.c)
  00000B66 000000C0 .text   xhpHandlerRx_entry	(ros_xhpHandler.c)
  00000C26 00000008 .text   xhpHandlerTx_entry	(ros_xhpHandler.c)
  00000C2E 0000000C .text   halInit	(hal_mcf5xxx.c)
  00000C3A 0000000E .text   halStart	(hal_mcf5xxx.c)
  00000C48 00000014 .text   halHalt	(hal_mcf5xxx.c)
  00000C5C 0000000C .text   halExit	(hal_mcf5xxx.c)
  00000C68 00000042 .text   canObjectDisable	(can_mcf5213.c)
  00000CAA 000000CC .text   canDeviceInit	(can_mcf5213.c)
  00000D76 000000FA .text   canInit	(can_mcf5213.c)
  00000E70 0000003E .text   canEnable	(can_mcf5213.c)
  00000EAE 00000058 .text   canSetMask	(can_mcf5213.c)
  00000F06 0000002C .text   canSetIntrObj	(can_mcf5213.c)
  00000F32 000000AC .text   canConfigMsgObj	(can_mcf5213.c)
  00000FDE 000000F8 .text   canGetMsgObj	(can_mcf5213.c)
  000010D6 000000BC .text   canTransmitMsgObj	(can_mcf5213.c)
  00001192 00000010 .text   comXhpRx_entry	(can_mcf5213_i.c)
  000011A2 00000026 .text   comXhpTx_entry	(can_mcf5213_i.c)
  000011C8 00000030 .text   canISR_Msg0	(can_mcf5213_isr.c)
  000011F8 00000030 .text   canISR_Msg1	(can_mcf5213_isr.c)
  00001228 00000016 .text   ioInit	(hal_mcf5213_io.c)
  0000123E 0000022A .text   clock_pll	(hal_mcf5213_sysinit.c)
  00001468 00000046 .text   clock_lpd	(hal_mcf5213_sysinit.c)
  000014AE 00000066 .text   mcf5213_init	(hal_mcf5213_sysinit.c)
  00001514 00000016 .text   halBsFreeRunTimerGet	(hal_mcf5213_timer.c)
  0000152A 00000034 .text   halBsExecTimeStart	(hal_mcf5213_timer.c)
  0000155E 00000042 .text   halBsExecTimeStop	(hal_mcf5213_timer.c)
  000015A0 0000000E .text   halBsExecTimeGet	(hal_mcf5213_timer.c)
  000015AE 00000010 .text   halBsExecTimeResume	(hal_mcf5213_timer.c)
  000015BE 000000C6 .text   halBsTimerStart	(hal_mcf5213_timer.c)
  00001684 00000020 .text   halBsTimerStop	(hal_mcf5213_timer.c)
  000016A4 00000024 .text   halBsTimerDisable	(hal_mcf5213_timer.c)
  000016C8 00000024 .text   halBsTimerEnable	(hal_mcf5213_timer.c)
  000016EC 00000066 .text   rubusISR_Timer	(hal_mcf5213_timer.c)
  00001752 000001D0 .text   mcf_exception_handler	(hal_vector.c)
  00001922 00000020 .text   asm_exception_handler	(hal_vector.c)
  00001944 0000016C .text   @DummyFn1	(hal_mcf5xxx_lo.s)
  00001944 00000000 .text   asm_set_ipl	(hal_mcf5xxx_lo.s)
  00001944 00000000 .text   asm_set_ipl	(hal_mcf5xxx_lo.s)
  00001944 0000016C .text   .text	(hal_mcf5xxx_lo.s)
  0000197A 00000000 .text   mcf5xxx_wr_sr	(hal_mcf5xxx_lo.s)
  0000197A 00000000 .text   mcf5xxx_wr_sr	(hal_mcf5xxx_lo.s)
  00001982 00000000 .text   mcf5xxx_wr_cacr	(hal_mcf5xxx_lo.s)
  00001982 00000000 .text   mcf5xxx_wr_cacr	(hal_mcf5xxx_lo.s)
  0000198E 00000000 .text   mcf5xxx_wr_asid	(hal_mcf5xxx_lo.s)
  0000198E 00000000 .text   mcf5xxx_wr_asid	(hal_mcf5xxx_lo.s)
  0000199A 00000000 .text   mcf5xxx_wr_acr0	(hal_mcf5xxx_lo.s)
  0000199A 00000000 .text   mcf5xxx_wr_acr0	(hal_mcf5xxx_lo.s)
  000019A6 00000000 .text   mcf5xxx_wr_acr1	(hal_mcf5xxx_lo.s)
  000019A6 00000000 .text   mcf5xxx_wr_acr1	(hal_mcf5xxx_lo.s)
  000019B2 00000000 .text   mcf5xxx_wr_acr2	(hal_mcf5xxx_lo.s)
  000019B2 00000000 .text   mcf5xxx_wr_acr2	(hal_mcf5xxx_lo.s)
  000019BE 00000000 .text   mcf5xxx_wr_acr3	(hal_mcf5xxx_lo.s)
  000019BE 00000000 .text   mcf5xxx_wr_acr3	(hal_mcf5xxx_lo.s)
  000019CA 00000000 .text   mcf5xxx_wr_mmubar	(hal_mcf5xxx_lo.s)
  000019CA 00000000 .text   mcf5xxx_wr_mmubar	(hal_mcf5xxx_lo.s)
  000019D6 00000000 .text   mcf5xxx_wr_other_a7	(hal_mcf5xxx_lo.s)
  000019D6 00000000 .text   mcf5xxx_wr_other_a7	(hal_mcf5xxx_lo.s)
  000019E2 00000000 .text   mcf5xxx_wr_vbr	(hal_mcf5xxx_lo.s)
  000019E2 00000000 .text   mcf5xxx_wr_vbr	(hal_mcf5xxx_lo.s)
  000019EE 00000000 .text   mcf5xxx_wr_macsr	(hal_mcf5xxx_lo.s)
  000019EE 00000000 .text   mcf5xxx_wr_macsr	(hal_mcf5xxx_lo.s)
  000019FA 00000000 .text   mcf5xxx_wr_mask	(hal_mcf5xxx_lo.s)
  000019FA 00000000 .text   mcf5xxx_wr_mask	(hal_mcf5xxx_lo.s)
  00001A06 00000000 .text   mcf5xxx_wr_acc0	(hal_mcf5xxx_lo.s)
  00001A06 00000000 .text   mcf5xxx_wr_acc0	(hal_mcf5xxx_lo.s)
  00001A12 00000000 .text   mcf5xxx_wr_accext01	(hal_mcf5xxx_lo.s)
  00001A12 00000000 .text   mcf5xxx_wr_accext01	(hal_mcf5xxx_lo.s)
  00001A1E 00000000 .text   mcf5xxx_wr_accext23	(hal_mcf5xxx_lo.s)
  00001A1E 00000000 .text   mcf5xxx_wr_accext23	(hal_mcf5xxx_lo.s)
  00001A2A 00000000 .text   mcf5xxx_wr_acc1	(hal_mcf5xxx_lo.s)
  00001A2A 00000000 .text   mcf5xxx_wr_acc1	(hal_mcf5xxx_lo.s)
  00001A36 00000000 .text   mcf5xxx_wr_acc2	(hal_mcf5xxx_lo.s)
  00001A36 00000000 .text   mcf5xxx_wr_acc2	(hal_mcf5xxx_lo.s)
  00001A42 00000000 .text   mcf5xxx_wr_acc3	(hal_mcf5xxx_lo.s)
  00001A42 00000000 .text   mcf5xxx_wr_acc3	(hal_mcf5xxx_lo.s)
  00001A4E 00000000 .text   mcf5xxx_wr_pc	(hal_mcf5xxx_lo.s)
  00001A4E 00000000 .text   mcf5xxx_wr_pc	(hal_mcf5xxx_lo.s)
  00001A5A 00000000 .text   mcf5xxx_wr_rombar0	(hal_mcf5xxx_lo.s)
  00001A5A 00000000 .text   mcf5xxx_wr_rombar0	(hal_mcf5xxx_lo.s)
  00001A66 00000000 .text   mcf5xxx_wr_rombar1	(hal_mcf5xxx_lo.s)
  00001A66 00000000 .text   mcf5xxx_wr_rombar1	(hal_mcf5xxx_lo.s)
  00001A72 00000000 .text   mcf5xxx_wr_rambar0	(hal_mcf5xxx_lo.s)
  00001A72 00000000 .text   mcf5xxx_wr_rambar0	(hal_mcf5xxx_lo.s)
  00001A7E 00000000 .text   mcf5xxx_wr_rambar1	(hal_mcf5xxx_lo.s)
  00001A7E 00000000 .text   mcf5xxx_wr_rambar1	(hal_mcf5xxx_lo.s)
  00001A8A 00000000 .text   mcf5xxx_wr_mpcr	(hal_mcf5xxx_lo.s)
  00001A8A 00000000 .text   mcf5xxx_wr_mpcr	(hal_mcf5xxx_lo.s)
  00001A96 00000000 .text   mcf5xxx_wr_secmbar	(hal_mcf5xxx_lo.s)
  00001A96 00000000 .text   mcf5xxx_wr_secmbar	(hal_mcf5xxx_lo.s)
  00001AA2 00000000 .text   mcf5xxx_wr_mbar	(hal_mcf5xxx_lo.s)
  00001AA2 00000000 .text   mcf5xxx_wr_mbar	(hal_mcf5xxx_lo.s)
  00001AB0 00000030 .text   __copy_rom_section	(startcf.c)
  00001AE0 0000003A .text   __copy_rom_sections_to_ram	(startcf.c)
  00001B1A 000000B0 .text   clear_mem	(startcf.c)
  00001BCA 000000B4 .text   _startup	(startcf.c)
  00001C7E 000000CE .text   halXhpInit	(hal_xhp.c)
  00001D4C 00000054 .text   canBsHpPut	(hal_xhp.c)
  00001DA0 00000074 .text   halXhpWrite	(hal_xhp.c)
  00001E14 00000074 .text   halXhpRead	(hal_xhp.c)
  00001E88 00000118 .text   comXhpRx_handler	(hal_xhp.c)
  00001FA0 0000007C .text   comXhpTx_handler	(hal_xhp.c)
  0000201C 000000E8 .text   uart_init	(uart_support.c)
  00002104 00000018 .text   InitializeUART	(uart_support.c)
  0000211C 0000002A .text   ReadUARTN	(uart_support.c)
  00002146 0000002E .text   WriteUARTN	(uart_support.c)
  00002174 00000036 .text   comXhpRxInternal	(r_ex_c.c)
  000021AA 00000036 .text   comXhpTxInternal	(r_ex_c.c)
  000021E0 00000050 .text   redStartInternal	(r_ex_c.c)
  00002230 00000056 .text   blinkyReschedInternal	(r_ex_c.c)
  00002286 00000056 .text   blinky0Internal	(r_ex_c.c)
  000022DC 00000056 .text   blinky1Internal	(r_ex_c.c)
  00002332 00000056 .text   blinky2Internal	(r_ex_c.c)
  00002388 00000056 .text   blinky3Internal	(r_ex_c.c)
  000023DE 00000038 .text   redScheduleBlinky0_0	(r_ex_c.c)
  00002416 00000024 .text   redScheduleBlinky0_5	(r_ex_c.c)
  0000243A 00000024 .text   redScheduleBlinky0_10	(r_ex_c.c)
  0000245E 00000024 .text   redScheduleBlinky0_15	(r_ex_c.c)
  00002482 00000024 .text   redScheduleBlinky0_20	(r_ex_c.c)
  000024A6 00000024 .text   redScheduleBlinky0_25	(r_ex_c.c)
  000024CA 00000024 .text   redScheduleBlinky0_30	(r_ex_c.c)
  000024EE 00000024 .text   redScheduleBlinky0_35	(r_ex_c.c)
  00002512 00000024 .text   redScheduleBlinky0_40	(r_ex_c.c)
  00002536 00000024 .text   redScheduleBlinky0_45	(r_ex_c.c)
  0000255A 00000024 .text   redScheduleBlinky0_50	(r_ex_c.c)
  0000257E 00000024 .text   redScheduleBlinky0_55	(r_ex_c.c)
  000025A2 00000024 .text   redScheduleBlinky0_60	(r_ex_c.c)
  000025C6 00000024 .text   redScheduleBlinky0_65	(r_ex_c.c)
  000025EA 00000024 .text   redScheduleBlinky0_70	(r_ex_c.c)
  0000260E 00000024 .text   redScheduleBlinky0_75	(r_ex_c.c)
  00002632 00000024 .text   redScheduleBlinky0_80	(r_ex_c.c)
  00002656 00000024 .text   redScheduleBlinky0_85	(r_ex_c.c)
  0000267A 00000024 .text   redScheduleBlinky0_90	(r_ex_c.c)
  0000269E 00000012 .text   redScheduleBlinky0_95	(r_ex_c.c)
  000026B0 00000032 .text   redSchedule2_0	(r_ex_c.c)
  000026E2 00000024 .text   redSchedule2_5	(r_ex_c.c)
  00002706 00000024 .text   redSchedule2_10	(r_ex_c.c)
  0000272A 00000024 .text   redSchedule2_15	(r_ex_c.c)
  0000274E 00000024 .text   redSchedule2_20	(r_ex_c.c)
  00002772 00000024 .text   redSchedule2_25	(r_ex_c.c)
  00002796 00000024 .text   redSchedule2_30	(r_ex_c.c)
  000027BA 00000024 .text   redSchedule2_35	(r_ex_c.c)
  000027DE 00000024 .text   redSchedule2_40	(r_ex_c.c)
  00002802 00000024 .text   redSchedule2_45	(r_ex_c.c)
  00002826 0000002A .text   redSchedule2_50	(r_ex_c.c)
  00002850 00000024 .text   redSchedule2_55	(r_ex_c.c)
  00002874 00000024 .text   redSchedule2_60	(r_ex_c.c)
  00002898 00000024 .text   redSchedule2_65	(r_ex_c.c)
  000028BC 00000024 .text   redSchedule2_70	(r_ex_c.c)
  000028E0 0000002A .text   redSchedule2_75	(r_ex_c.c)
  0000290A 00000024 .text   redSchedule2_80	(r_ex_c.c)
  0000292E 00000024 .text   redSchedule2_85	(r_ex_c.c)
  00002952 00000024 .text   redSchedule2_90	(r_ex_c.c)
  00002976 00000024 .text   redSchedule2_95	(r_ex_c.c)
  0000299A 0000002E .text   redSchedule2_100	(r_ex_c.c)
  000029C8 00000024 .text   redSchedule2_105	(r_ex_c.c)
  000029EC 00000024 .text   redSchedule2_110	(r_ex_c.c)
  00002A10 00000024 .text   redSchedule2_115	(r_ex_c.c)
  00002A34 00000024 .text   redSchedule2_120	(r_ex_c.c)
  00002A58 00000026 .text   redSchedule2_125	(r_ex_c.c)
  00002A7E 00000026 .text   redSchedule2_130	(r_ex_c.c)
  00002AA4 00000026 .text   redSchedule2_135	(r_ex_c.c)
  00002ACA 00000026 .text   redSchedule2_140	(r_ex_c.c)
  00002AF0 00000026 .text   redSchedule2_145	(r_ex_c.c)
  00002B16 00000030 .text   redSchedule2_150	(r_ex_c.c)
  00002B46 00000026 .text   redSchedule2_155	(r_ex_c.c)
  00002B6C 00000026 .text   redSchedule2_160	(r_ex_c.c)
  00002B92 00000026 .text   redSchedule2_165	(r_ex_c.c)
  00002BB8 00000026 .text   redSchedule2_170	(r_ex_c.c)
  00002BDE 00000026 .text   redSchedule2_175	(r_ex_c.c)
  00002C04 00000026 .text   redSchedule2_180	(r_ex_c.c)
  00002C2A 00000026 .text   redSchedule2_185	(r_ex_c.c)
  00002C50 00000026 .text   redSchedule2_190	(r_ex_c.c)
  00002C76 00000012 .text   redSchedule2_195	(r_ex_c.c)
  00002C88 00000032 .text   redScheduleStart_0	(r_ex_c.c)
  00002CBA 00000012 .text   redScheduleStart_5	(r_ex_c.c)
  00002CCC 0000002E .text   xhpHandlerRxInternal	(r_ex_c.c)
  00002CFA 0000002E .text   xhpHandlerTxInternal	(r_ex_c.c)
  00002D28 00000042 .text   bsRubusInit	(r_ex_c.c)
  00002D6A 00000036 .text   rubusIdleMain	(main.c)
  00002DA0 00000030 .text   main	(main.c)
  00002DD0 00000018 .text   blueError	(errors.c)
  00002DE8 0000002A .text   redError	(errors.c)
  00002E12 0000003C .text   redStartMain	(red.c)
  00002E4E 0000004A .text   blinkyReschedMain	(red.c)
  00002E98 00000034 .text   blinky0Main	(red.c)
  00002ECC 00000020 .text   blinky1Main	(red.c)
  00002EEC 00000020 .text   blinky2Main	(red.c)
  00002F0C 00000020 .text   blinky3Main	(red.c)
  00002F2C 0000000C .text   bsMemResetN	(rubusOS-ColdFireV2.a bs_clib.o      )
  00002F38 0000007C .text   bsStackInit	(rubusOS-ColdFireV2.a bs_basic.o     )
  00002FB4 00000034 .text   bsStackCheck	(rubusOS-ColdFireV2.a bs_basic.o     )
  00002FE8 00000020 .text   bsStackUsed	(rubusOS-ColdFireV2.a bs_basic.o     )
  00003008 00000034 .text   bsInit	(rubusOS-ColdFireV2.a bs_basic.o     )
  0000303C 00000060 .text   bsGetObjects	(rubusOS-ColdFireV2.a bs_basic.o     )
  0000309C 00000054 .text   bsResourceNext	(rubusOS-ColdFireV2.a bs_basic.o     )
  000030F0 00000060 .text   bsLogInit	(rubusOS-ColdFireV2.a bs_log.o       )
  00003150 00000078 .text   bsLogStatus	(rubusOS-ColdFireV2.a bs_log.o       )
  000031C8 00000070 .text   bsLogStart	(rubusOS-ColdFireV2.a bs_log.o       )
  00003238 00000070 .text   bsLogStop	(rubusOS-ColdFireV2.a bs_log.o       )
  000032A8 00000028 .text   bsLogSet	(rubusOS-ColdFireV2.a bs_log.o       )
  000032D0 00000058 .text   bsLogSetAll	(rubusOS-ColdFireV2.a bs_log.o       )
  00003328 0000008C .text   bsLogGet	(rubusOS-ColdFireV2.a bs_log.o       )
  000033B4 00000090 .text   bsLogPutElm	(rubusOS-ColdFireV2.a bs_log.o       )
  00003444 0000002C .text   bsLogPut	(rubusOS-ColdFireV2.a bs_log.o       )
  00003470 00000018 .text   bsB32ToString	(rubusOS-ColdFireV2.a bs_services.o  )
  00003488 00000010 .text   bsB16ToString	(rubusOS-ColdFireV2.a bs_services.o  )
  00003498 00000010 .text   bsStringToB16	(rubusOS-ColdFireV2.a bs_services.o  )
  000034A8 00000030 .text   greenThreadInit	(rubusOS-ColdFireV2.a g_thread.o     )
  000034D8 00000048 .text   greenInit	(rubusOS-ColdFireV2.a g_thread.o     )
  00003520 00000008 .text   greenIntrDisable	(rubusOS-ColdFireV2.a g_thread.o     )
  00003528 00000030 .text   redValidateSchedule	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003558 00000028 .text   redActivateSchedule	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003580 00000030 .text   redThreadInit	(rubusOS-ColdFireV2.a r_kernel.o     )
  000035B0 000000B8 .text   redInit	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003668 0000002C .text   redSetSchedule	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003694 00000064 .text   redSetScheduleImmediate	(rubusOS-ColdFireV2.a r_kernel.o     )
  000036F8 0000003C .text   redStackUsed	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003734 000000D0 .text   redNotify	(rubusOS-ColdFireV2.a r_kernelmode.o )
  00003804 00000044 .text   redNested	(rubusOS-ColdFireV2.a r_kernelmode.o )
  00003848 000000EC .text   blueInit	(rubusOS-ColdFireV2.a b_kernel.o     )
  00003934 0000003C .text   blueStackUsed	(rubusOS-ColdFireV2.a b_kernel.o     )
  00003970 00000080 .text   blueIntrCheck	(rubusOS-ColdFireV2.a b_kernelmode.o )
  000039F0 00000014 .text   blueKernelEnter	(rubusOS-ColdFireV2.a b_kernelmode.o )
  00003A04 00000074 .text   blueKernelExit	(rubusOS-ColdFireV2.a b_kernelmode.o )
  00003A78 00000060 .text   blueResume	(rubusOS-ColdFireV2.a b_kernelmode.o )
  00003AD8 0000007C .text   blueKernelEntry	(rubusOS-ColdFireV2.a b_kernelthread.)
  00003B54 0000000C .text   bluePreemptionLock	(rubusOS-ColdFireV2.a b_policy.o     )
  00003B60 00000064 .text   blueUnBlock	(rubusOS-ColdFireV2.a b_policy.o     )
  00003BC4 0000003C .text   blueIntSignalInterrupt	(rubusOS-ColdFireV2.a b_signal.o     )
  00003C00 000000C4 .text   blueActivate	(rubusOS-ColdFireV2.a b_signal.o     )
  00003CC4 00000090 .text   blueSpawn	(rubusOS-ColdFireV2.a b_thread.o     )
  00003D54 000000B4 .text   blueCreate	(rubusOS-ColdFireV2.a b_thread.o     )
  00003E08 0000005C .text   blueThreadInitAll	(rubusOS-ColdFireV2.a b_thread.o     )
  00003E64 0000001C .text   bsRubusStart	(rubusOS-ColdFireV2.a hal_basic.o    )
  00003E80 00000028 .text   halBsInit	(rubusOS-ColdFireV2.a hal_basic.o    )
  00003EA8 00000014 .text   greenEnter	(rubusOS-ColdFireV2.a hal_basic.o    )
  00003EBC 0000004C .text   greenExit	(rubusOS-ColdFireV2.a hal_basic.o    )
  00003F08 00000004 .text   halGreenIntrGet	(rubusOS-ColdFireV2.a hal_basic.o    )
  00003F0C 00000010 .text   halGreenIntrSet	(rubusOS-ColdFireV2.a hal_basic.o    )
  00003F1C 00000014 .text   halGreenIntrEnable	(rubusOS-ColdFireV2.a hal_basic.o    )
  00003F30 00000014 .text   halGreenIntrDisable	(rubusOS-ColdFireV2.a hal_basic.o    )
  00003F44 0000001C .text   halRedStackInit	(rubusOS-ColdFireV2.a hal_red.o      )
  00003F60 00000094 .text   halBsTimerIntrEntry	(rubusOS-ColdFireV2.a hal_reddispatch)
  00003FF4 000000A0 .text   halRedDispatch	(rubusOS-ColdFireV2.a hal_reddispatch)
  00004094 00000040 .text   halRedExitInternal	(rubusOS-ColdFireV2.a hal_reddispatch)
  000040D4 00000010 .text   halRedIntrContextExit	(rubusOS-ColdFireV2.a hal_reddispatch)
  000040E4 0000002C .text   halBlueThreadInit	(rubusOS-ColdFireV2.a hal_blue.o     )
  00004110 0000001C .text   halBlueStackInit	(rubusOS-ColdFireV2.a hal_blue.o     )
  0000412C 00000030 .text   halBlueTLFindNext	(rubusOS-ColdFireV2.a hal_blue.o     )
  0000415C 0000002C .text   halBlueDispatchStackCheck	(rubusOS-ColdFireV2.a hal_bluedispatc)
  00004188 0000004C .text   halBlueDispatchSuspend	(rubusOS-ColdFireV2.a hal_bluedispatc)
  000041D4 000000C8 .text   halBlueDispatchNext	(rubusOS-ColdFireV2.a hal_bluedispatc)
  0000429C 00000038 .text   halBlueDispatch	(rubusOS-ColdFireV2.a hal_bluedispatc)
  000042D4 00000010 .text   halBlueResumeKT	(rubusOS-ColdFireV2.a hal_bluedispatc)
  000042E4 00000024 .text   blueTLInit	(rubusOS-ColdFireV2.a b_rqmulti.o    )
  00004308 00000048 .text   blueTLInsertHead	(rubusOS-ColdFireV2.a b_rqmulti.o    )
  00004350 00000070 .text   blueTLInsertTail	(rubusOS-ColdFireV2.a b_rqmulti.o    )
  000043C0 000000A4 .text   blueTLGet	(rubusOS-ColdFireV2.a b_rqmulti.o    )
  00004464 000003EA .text   __num2dec	(libm.a ansi_fp.o      )
  0000484E 000000AE .text   frexp	(libm.a s_frexp.o      )
  000048FC 0000000E .text   __signbitd	(libm.a math_api.o     )
  0000490A 00000050 .text   __fpclassifyd	(libm.a math_api.o     )
  0000495A 00000020 .text   __prep_buffer	(libc.a buffer_io.o    )
  0000497A 00000060 .text   __flush_buffer	(libc.a buffer_io.o    )
  000049DA 000001B0 .text   __fwrite	(libc.a direct_io.o    )
  00004B8A 00000026 .text   isupper	(libc.a file_io.o      )
  00004BB0 00000012 .text   memcpy	(libc.a mem.o          )
  00004BC2 00000020 .text   memchr	(libc.a mem.o          )
  00004BE2 00000030 .text   __FileWrite	(libc.a printf.o       )
  00004C12 00000024 .text   printf	(libc.a printf.o       )
  00004C38 00000010 .text   strlen	(libc.a string.o       )
  00004C48 0000000C .text   strcpy	(libc.a string.o       )
  00004C54 00000030 .text   strchr	(libc.a string.o       )
  00004C84 00000026 .text   isdigit	(libc.a strtold.o      )
  00004CAA 0000033C .text   parse_format	(libc.a printformat_fp.)
  00004FE6 0000002A .text   set_base	(libc.a printformat_fp.)
  00005010 000000D6 .text   justify_conversion	(libc.a printformat_fp.)
  000050E6 00000114 .text   long2str	(libc.a printformat_fp.)
  000051FA 000000E0 .text   __round_decimal	(libc.a printformat_fp.)
  000052DA 00000420 .text   float2str	(libc.a printformat_fp.)
  000056FA 00000474 .text   __pformatterFP	(libc.a printformat_fp.)
  00005B6E 00000020 .text   __init_uart_console	(libc.a uart_console_io)
  00005B8E 00000068 .text   __read_console	(libc.a uart_console_io)
  00005BF6 0000002E .text   __write_console	(libc.a uart_console_io)
  00005C24 00000004 .text   __close_console	(libc.a uart_console_io)
  00005C28 00000032 .text   .text	(fp_coldfire.a basic.o        )
  00005C28 00000000 .text   _f_neg	(fp_coldfire.a basic.o        )
  00005C34 00000000 .text   _d_neg	(fp_coldfire.a basic.o        )
  00005C4A 00000000 .text   _d_qtod	(fp_coldfire.a basic.o        )
  00005C4A 00000000 .text   _d_dtoq	(fp_coldfire.a basic.o        )
  00005C5C 00000000 .text   _d_add	(fp_coldfire.a dadd.o         )
  00005C5C 00000614 .text   .text	(fp_coldfire.a dadd.o         )
  00005E8C 00000000 .text   _d_sub	(fp_coldfire.a dadd.o         )
  00006270 00000000 .text   _d_cmp	(fp_coldfire.a dcompare.o     )
  00006270 0000015E .text   .text	(fp_coldfire.a dcompare.o     )
  0000627A 00000000 .text   _d_cmpe	(fp_coldfire.a dcompare.o     )
  00006284 00000000 .text   _d_feq	(fp_coldfire.a dcompare.o     )
  0000628A 00000000 .text   _d_fne	(fp_coldfire.a dcompare.o     )
  00006290 00000000 .text   _d_flt	(fp_coldfire.a dcompare.o     )
  00006296 00000000 .text   _d_fle	(fp_coldfire.a dcompare.o     )
  0000629C 00000000 .text   _d_fgt	(fp_coldfire.a dcompare.o     )
  000062A2 00000000 .text   _d_fge	(fp_coldfire.a dcompare.o     )
  000062AC 00000000 .text   _d_fun	(fp_coldfire.a dcompare.o     )
  000062B2 00000000 .text   _d_for	(fp_coldfire.a dcompare.o     )
  000063D0 00000000 .text   _d_div	(fp_coldfire.a ddiv.o         )
  000063D0 00000434 .text   .text	(fp_coldfire.a ddiv.o         )
  00006804 00000000 .text   _d_mul	(fp_coldfire.a dmul.o         )
  00006804 00000598 .text   .text	(fp_coldfire.a dmul.o         )
  00006D9C 00000056 .text   .text	(fp_coldfire.a dterminals.o   )
  00006D9C 00000000 .text   _fp_d_rounding	(fp_coldfire.a dterminals.o   )
  00006DC4 00000000 .text   _fp_d_underflow	(fp_coldfire.a dterminals.o   )
  00006DD8 00000000 .text   _fp_d_overflow	(fp_coldfire.a dterminals.o   )
  00006DF4 00000000 .text   _d_dtoi	(fp_coldfire.a dtoi.o         )
  00006DF4 0000008E .text   .text	(fp_coldfire.a dtoi.o         )
  00006E84 00000000 .text   _d_utod	(fp_coldfire.a int_to_d.o     )
  00006E84 00000136 .text   .text	(fp_coldfire.a int_to_d.o     )
  00006ECA 00000000 .text   _d_itod	(fp_coldfire.a int_to_d.o     )
  00006EE6 00000000 .text   _d_ulltod	(fp_coldfire.a int_to_d.o     )
  00006F78 00000000 .text   _d_lltod	(fp_coldfire.a int_to_d.o     )
  00006FBC 00000010 .rodata xhpCmdTableCtrl	(ros_xhpCmdCtrl.c)
  00006FCC 00000004 .rodata xhpCmdTableCtrlPtr	(ros_xhpCmdCtrl.c)
  00006FD0 00000048 .rodata xhpCmdTableOs	(ros_xhpCmdCtrl.c)
  00007018 00000004 .rodata xhpCmdTableOsPtr	(ros_xhpCmdCtrl.c)
  0000701C 00000010 .rodata xhpHandlerAttr	(hal_xhp.c)
  0000702C 00000004 .rodata canMaskGlobal	(hal_xhp.c)
  00007030 00000006 .rodata canBaud	(hal_xhp.c)
  00007038 0000000C .rodata greenAttr	(r_ex_s.c)
  00007044 0000001C .rodata comXhpRx	(r_ex_s.c)
  00007060 0000001C .rodata comXhpTx	(r_ex_s.c)
  0000707C 00000020 .rodata redAttr	(r_ex_s.c)
  0000709C 0000000C .rodata redStart	(r_ex_s.c)
  000070A8 0000000C .rodata blinkyResched	(r_ex_s.c)
  000070B4 0000000C .rodata blinky0	(r_ex_s.c)
  000070C0 0000000C .rodata blinky1	(r_ex_s.c)
  000070CC 0000000C .rodata blinky2	(r_ex_s.c)
  000070D8 0000000C .rodata blinky3	(r_ex_s.c)
  000070E4 00000010 .rodata redScheduleBlinky0	(r_ex_s.c)
  000070F4 00000010 .rodata redSchedule2	(r_ex_s.c)
  00007104 00000010 .rodata redScheduleStart	(r_ex_s.c)
  00007114 00000014 .rodata blueAttr	(r_ex_s.c)
  00007128 00000020 .rodata blueKernel	(r_ex_s.c)
  00007148 00000020 .rodata xhpHandlerRx	(r_ex_s.c)
  00007168 00000020 .rodata xhpHandlerTx	(r_ex_s.c)
  00007188 00000020 .rodata blueIdle	(r_ex_s.c)
  000071A8 00000007 .rodata @86	(r_ex_s.c)
  000071AF 0000000A .rodata @87	(r_ex_s.c)
  000071B9 0000000A .rodata @88	(r_ex_s.c)
  000071C3 00000009 .rodata @89	(r_ex_s.c)
  000071CC 00000009 .rodata @90	(r_ex_s.c)
  000071D5 00000009 .rodata @91	(r_ex_s.c)
  000071DE 0000000D .rodata @92	(r_ex_s.c)
  000071EB 0000000D .rodata @93	(r_ex_s.c)
  000071F8 0000000B .rodata @94	(r_ex_s.c)
  00007203 00000009 .rodata @95	(r_ex_s.c)
  0000720C 00000008 .rodata @96	(r_ex_s.c)
  00007214 00000009 .rodata @97	(r_ex_s.c)
  0000721D 0000000E .rodata @98	(r_ex_s.c)
  0000722B 00000008 .rodata @99	(r_ex_s.c)
  00007233 00000008 .rodata @100	(r_ex_s.c)
  0000723B 00000008 .rodata @101	(r_ex_s.c)
  00007243 00000008 .rodata @102	(r_ex_s.c)
  0000724B 00000013 .rodata @103	(r_ex_s.c)
  0000725E 0000000D .rodata @104	(r_ex_s.c)
  0000726B 00000011 .rodata @105	(r_ex_s.c)
  0000727C 000000A0 .rodata bsIdNameTable	(r_ex_s.c)
  0000731C 00000014 .rodata @106	(r_ex_s.c)
  00007330 00000004 .rodata bsLabelDate	(r_ex_s.c)
  00007334 00000020 .rodata @107	(r_ex_s.c)
  00007354 00000004 .rodata bsLabelCoder	(r_ex_s.c)
  00007358 00000025 .rodata @108	(r_ex_s.c)
  00007380 00000004 .rodata bsLabelIdentifier	(r_ex_s.c)
  00007384 00000050 .rodata bsIdTable	(r_ex_s.c)
  000073D4 00000040 .rodata bsAttr	(r_ex_s.c)
  00007414 00000014 .rodata bsLogAttr	(r_ex_s.c)
  00007428 00000004 .rodata blueIntrTableTop	(r_ex_d.c)
  0000742C 00000004 .rodata blueIntrTableBottom	(r_ex_d.c)
  00007430 00000004 .rodata @91	(red.c)
  00007434 0000005F .rodata @93	(rubusOS-ColdFireV2.a bs_label.o     )
  00007494 00000004 .rodata bsOSLabel	(rubusOS-ColdFireV2.a bs_label.o     )
  00007498 00000048 .rodata bit_values	(libm.a ansi_fp.o      )
  000074E0 00000040 .rodata digit_values	(libm.a ansi_fp.o      )
  00007520 00000081 .rodata _ctypes_	(libc.a ctype.o        )
  000075A1 00000005 .rodata @827	(libc.a printformat_fp.)
  000075A6 00000005 .rodata @828	(libc.a printformat_fp.)
  000075AB 00000004 .rodata @829	(libc.a printformat_fp.)
  000075AF 00000004 .rodata @830	(libc.a printformat_fp.)
  000075B3 00000005 .rodata @831	(libc.a printformat_fp.)
  000075B8 00000005 .rodata @832	(libc.a printformat_fp.)
  000075BD 00000004 .rodata @833	(libc.a printformat_fp.)
  000075C1 00000004 .rodata @834	(libc.a printformat_fp.)
  000075C5 00000001 .rodata @1100	(libc.a printformat_fp.)
#>000075C8          ___ROM_AT (linker command file)
#>000075C8          ___DATA_ROM (linker command file)
#>000075C8          __S_romp (linker command file)

# .data
#>20000400          ___DATA_RAM (linker command file)
#>20000400          __exception_table_start__ (linker command file)
# Exception index
  20000400 00000000         Exception Table Index	()
#>20000400          __exception_table_end__ (linker command file)
#>20000400          ___sinit__ (linker command file)
# Linker generated symbols
  20000400 00000004         static initializer	(linker generated)
  20000404 000000D8 .data   __files	(libc.a ansi_files.o   )
#>200004E0          ___DATA_END (linker command file)
#>200004E0          __START_SDATA (linker command file)
#>200004E0          __END_SDATA (linker command file)
#>200004E0          __SDA_BASE (linker command file)

# .bss
#>200004E0          ___BSS_START (linker command file)
#>200004E0          __START_SBSS (linker command file)
  200004E0 00000004 .sbss   @LOCAL@__init_uart_console__Fv@initialized	(libc.a uart_console_io)
#>200004E4          __END_SBSS (linker command file)
#>200004E4          __START_BSS (linker command file)
  200004E4 00000001 .bss    xhpStateCB	(ros_xhpCmdCtrl.c)
  200004E8 00000014 .bss    xhpCmdCB	(ros_xhpHandler.c)
  200004FC 00000004 .bss    ioMode	(hal_mcf5213_io.c)
  20000500 00000004 .bss    ioCnt	(hal_mcf5213_io.c)
  20000504 00000004 .bss    halTimerExt	(hal_mcf5213_timer.c)
  20000508 00000004 .bss    halTimerAdjustment	(hal_mcf5213_timer.c)
  2000050C 00000018 .bss    canMsgTx	(hal_xhp.c)
  20000524 00000018 .bss    canMsgRx	(hal_xhp.c)
  2000053C 0000000C .bss    comHandlerTxCB	(hal_xhp.c)
  20000548 0000000C .bss    comHandlerRxCB	(hal_xhp.c)
  20000554 00000201 .bss    xhpBufferWrite	(hal_xhp.c)
  20000755 00000101 .bss    xhpBufferRead	(hal_xhp.c)
  20000858 00002000 .bss    bsLogBuffer	(r_ex_d.c)
  20002858 00000014 .bss    bsLogIdArray	(r_ex_d.c)
  2000286C 00000048 .bss    blueIdleCB	(r_ex_d.c)
  200028B4 00000048 .bss    xhpHandlerTxCB	(r_ex_d.c)
  200028FC 00000110 .bss    xhpHandlerTxStack	(r_ex_d.c)
  20002A0C 00000048 .bss    xhpHandlerRxCB	(r_ex_d.c)
  20002A54 00000110 .bss    xhpHandlerRxStack	(r_ex_d.c)
  20002B64 00000048 .bss    blueKernelCB	(r_ex_d.c)
  20002BAC 00000014 .bss    blueIntrTable	(r_ex_d.c)
  20002BC0 00000410 .bss    blueStack	(r_ex_d.c)
  20002FD0 00000004 .bss    blinky3Args	(r_ex_d.c)
  20002FD4 00000010 .bss    blinky3CB	(r_ex_d.c)
  20002FE4 00000004 .bss    blinky2Args	(r_ex_d.c)
  20002FE8 00000010 .bss    blinky2CB	(r_ex_d.c)
  20002FF8 00000004 .bss    blinky1Args	(r_ex_d.c)
  20002FFC 00000010 .bss    blinky1CB	(r_ex_d.c)
  2000300C 00000004 .bss    blinky0Args	(r_ex_d.c)
  20003010 00000010 .bss    blinky0CB	(r_ex_d.c)
  20003020 00000008 .bss    blinkyReschedArgs	(r_ex_d.c)
  20003028 00000010 .bss    blinkyReschedCB	(r_ex_d.c)
  20003038 00000010 .bss    redStartCB	(r_ex_d.c)
  20003048 00000020 .bss    redStackFrame	(r_ex_d.c)
  20003068 00000410 .bss    redStack	(r_ex_d.c)
  20003478 00000014 .bss    comXhpTxCB	(r_ex_d.c)
  2000348C 00000014 .bss    comXhpRxCB	(r_ex_d.c)
  200034A0 00000004 .bss    stackBlueUsed	(main.c)
  200034A4 00000004 .bss    stackRedUsed	(main.c)
  200034A8 00000004 .bss    rubusIdleLoop	(main.c)
  200034AC 00000004 .bss    errorObject	(errors.c)
  200034B0 00000004 .bss    errorCode	(errors.c)
  200034B4 00000010 .bss    bsBasicTimerCB	(rubusOS-ColdFireV2.a bs_basicvar.o  )
  200034C4 00000014 .bss    bsLogCB	(rubusOS-ColdFireV2.a bs_basicvar.o  )
  200034D8 00000010 .bss    bsBasicVar	(rubusOS-ColdFireV2.a bs_basicvar.o  )
  200034E8 00000004 .bss    bsKernelMode	(rubusOS-ColdFireV2.a bs_basicvar.o  )
  200034EC 00000020 .bss    redKernelTimeCB	(rubusOS-ColdFireV2.a r_kernelvar.o  )
  2000350C 0000000C .bss    redDispatchVar	(rubusOS-ColdFireV2.a r_kernelvar.o  )
  20003518 00000014 .bss    redKernelVar	(rubusOS-ColdFireV2.a r_kernelvar.o  )
  2000352C 00000080 .bss    blueThreadList	(rubusOS-ColdFireV2.a b_kernelvar.o  )
  200035AC 00000008 .bss    blueTimeSupList	(rubusOS-ColdFireV2.a b_kernelvar.o  )
  200035B4 00000020 .bss    blueKernelVar	(rubusOS-ColdFireV2.a b_kernelvar.o  )
#>200035D4          __END_BSS (linker command file)
#>200035D4          ___BSS_END (linker command file)
#>00000000          ___FLASH (linker command file)
#>00040000          ___FLASH_SIZE (linker command file)
#>20000400          ___SRAM (linker command file)
#>00007C00          ___SRAM_SIZE (linker command file)
#>20000000          ___VECTOR_RAM (linker command file)
#>40000000          ___IPSBAR (linker command file)
#>00001000          ___SP_SIZE (linker command file)
#>200035D4          ___HEAP_START (linker command file)
#>20007000          ___HEAP_END (linker command file)
#>20007000          ___SP_END (linker command file)
#>20008000          ___SP_INIT (linker command file)
#>200035D4          ___heap_addr (linker command file)
#>00003A2C          ___heap_size (linker command file)
#>20008000          __SP_INIT (linker command file)
#>00000010          ___stack_safety (linker command file)
#>20007000          ___mem_limit (linker command file)
#>000076A8          _romp_at (linker command file)

# .romp
#>000076A8          __S_romp (linker command file)


# Memory map:
  v_addr   p_addr   size     name
  20000000 20000000 00000400            vectorram
  00000000 00000000 00000400 .vectors   vectorrom
  00000400 00000400 00000018 .cfmprotect cfmprotrom
  00000500 00000500 00000000 .code      code
  00000500 00000500 000070C8 .text      code
  20000400 000075C8 000000E0 .data      sram
  200004E0 200004E0 000030F4 .bss       sram
  200035D4 000076A8 00000018 .romp      sram
  40000000 40000000 00000000 .ipsbar    ipsbar

# Link start time: Thu Sep 06 13:17:16 2012
# Link end time: Thu Sep 06 13:17:16 2012

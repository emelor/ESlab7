
# Unreferenced symbols:
	(encoderDriver.c )	[whole file]
	(keyboardDriver.c )	[whole file]
	(motorDriver.c )	[whole file]
	(potentiometerDriver.c )	[whole file]
	(displayDriver.c )	[whole file]


#>40000000          ___IPSBAR (linker command file)
#>20000000          ___RAMBAR (linker command file)
#>00008000          ___RAMBAR_SIZE (linker command file)
#>00000000          ___FLASHBAR (linker command file)
#>00040000          ___FLASHBAR_SIZE (linker command file)
#>20007FFC          ___SP_AFTER_RESET (linker command file)

# .code

# .ipsbar

# .vectors
  00000000 00000400 .vectorTable _interruptVector	(hal_vector.c)

# .cfmprotect
  00000400 00000018 .cfmconfig _cfm	(cfm.c)

# .text
  00000500 0000002A .text   leds_initialise	(LEDDriver.c)
  0000052A 00000016 .text   leds_output	(LEDDriver.c)
  00000540 000000D2 .text   leds_turnON	(LEDDriver.c)
  00000612 000000D2 .text   leds_turnOFF	(LEDDriver.c)
  000006E4 00000036 .text   bsObjectName	(ros_services.c)
  0000071A 00000096 .text   xhpCopyIdentifyer	(ros_xhpCmdCtrl.c)
  000007B0 00000010 .text   xhpInit	(ros_xhpCmdCtrl.c)
  000007C0 00000070 .text   xhpCmdCtrlConnect	(ros_xhpCmdCtrl.c)
  00000830 0000001A .text   xhpCmdCtrlDisconnect	(ros_xhpCmdCtrl.c)
  0000084A 0000004A .text   xhpCmdGetInfo	(ros_xhpCmdCtrl.c)
  00000894 00000032 .text   xhpParseCommand	(ros_xhpCmdCtrl.c)
  000008C6 0000008E .text   xhpProcessPackage	(ros_xhpCmdCtrl.c)
  00000954 0000004A .text   xhpCmdLogSet	(ros_xhpCmdLog.c)
  0000099E 00000028 .text   xhpCmdLogSetAll	(ros_xhpCmdLog.c)
  000009C6 00000042 .text   xhpCmdLogStart	(ros_xhpCmdLog.c)
  00000A08 0000002E .text   xhpCmdLogStop	(ros_xhpCmdLog.c)
  00000A36 00000076 .text   xhpCmdLogRead	(ros_xhpCmdLog.c)
  00000AAC 000000CA .text   xhpCmdLogReadNext	(ros_xhpCmdLog.c)
  00000B76 00000026 .text   xhpHandler_osInit	(ros_xhpHandler.c)
  00000B9C 000000C0 .text   xhpHandlerRx_entry	(ros_xhpHandler.c)
  00000C5C 00000008 .text   xhpHandlerTx_entry	(ros_xhpHandler.c)
  00000C64 0000000C .text   halInit	(hal_mcf5xxx.c)
  00000C70 0000000E .text   halStart	(hal_mcf5xxx.c)
  00000C7E 00000014 .text   halHalt	(hal_mcf5xxx.c)
  00000C92 0000000C .text   halExit	(hal_mcf5xxx.c)
  00000C9E 00000042 .text   canObjectDisable	(can_mcf5213.c)
  00000CE0 000000CC .text   canDeviceInit	(can_mcf5213.c)
  00000DAC 000000FA .text   canInit	(can_mcf5213.c)
  00000EA6 0000003E .text   canEnable	(can_mcf5213.c)
  00000EE4 00000058 .text   canSetMask	(can_mcf5213.c)
  00000F3C 0000002C .text   canSetIntrObj	(can_mcf5213.c)
  00000F68 000000AC .text   canConfigMsgObj	(can_mcf5213.c)
  00001014 000000F8 .text   canGetMsgObj	(can_mcf5213.c)
  0000110C 000000BC .text   canTransmitMsgObj	(can_mcf5213.c)
  000011C8 00000010 .text   comXhpRx_entry	(can_mcf5213_i.c)
  000011D8 00000026 .text   comXhpTx_entry	(can_mcf5213_i.c)
  000011FE 00000030 .text   canISR_Msg0	(can_mcf5213_isr.c)
  0000122E 00000030 .text   canISR_Msg1	(can_mcf5213_isr.c)
  0000125E 00000016 .text   ioInit	(hal_mcf5213_io.c)
  00001274 0000022A .text   clock_pll	(hal_mcf5213_sysinit.c)
  0000149E 00000046 .text   clock_lpd	(hal_mcf5213_sysinit.c)
  000014E4 00000066 .text   mcf5213_init	(hal_mcf5213_sysinit.c)
  0000154A 00000016 .text   halBsFreeRunTimerGet	(hal_mcf5213_timer.c)
  00001560 00000034 .text   halBsExecTimeStart	(hal_mcf5213_timer.c)
  00001594 00000042 .text   halBsExecTimeStop	(hal_mcf5213_timer.c)
  000015D6 0000000E .text   halBsExecTimeGet	(hal_mcf5213_timer.c)
  000015E4 00000010 .text   halBsExecTimeResume	(hal_mcf5213_timer.c)
  000015F4 000000C6 .text   halBsTimerStart	(hal_mcf5213_timer.c)
  000016BA 00000020 .text   halBsTimerStop	(hal_mcf5213_timer.c)
  000016DA 00000024 .text   halBsTimerDisable	(hal_mcf5213_timer.c)
  000016FE 00000024 .text   halBsTimerEnable	(hal_mcf5213_timer.c)
  00001722 00000066 .text   rubusISR_Timer	(hal_mcf5213_timer.c)
  00001788 000001D0 .text   mcf_exception_handler	(hal_vector.c)
  00001958 00000020 .text   asm_exception_handler	(hal_vector.c)
  00001978 0000016C .text   @DummyFn1	(hal_mcf5xxx_lo.s)
  00001978 00000000 .text   asm_set_ipl	(hal_mcf5xxx_lo.s)
  00001978 00000000 .text   asm_set_ipl	(hal_mcf5xxx_lo.s)
  00001978 0000016C .text   .text	(hal_mcf5xxx_lo.s)
  000019AE 00000000 .text   mcf5xxx_wr_sr	(hal_mcf5xxx_lo.s)
  000019AE 00000000 .text   mcf5xxx_wr_sr	(hal_mcf5xxx_lo.s)
  000019B6 00000000 .text   mcf5xxx_wr_cacr	(hal_mcf5xxx_lo.s)
  000019B6 00000000 .text   mcf5xxx_wr_cacr	(hal_mcf5xxx_lo.s)
  000019C2 00000000 .text   mcf5xxx_wr_asid	(hal_mcf5xxx_lo.s)
  000019C2 00000000 .text   mcf5xxx_wr_asid	(hal_mcf5xxx_lo.s)
  000019CE 00000000 .text   mcf5xxx_wr_acr0	(hal_mcf5xxx_lo.s)
  000019CE 00000000 .text   mcf5xxx_wr_acr0	(hal_mcf5xxx_lo.s)
  000019DA 00000000 .text   mcf5xxx_wr_acr1	(hal_mcf5xxx_lo.s)
  000019DA 00000000 .text   mcf5xxx_wr_acr1	(hal_mcf5xxx_lo.s)
  000019E6 00000000 .text   mcf5xxx_wr_acr2	(hal_mcf5xxx_lo.s)
  000019E6 00000000 .text   mcf5xxx_wr_acr2	(hal_mcf5xxx_lo.s)
  000019F2 00000000 .text   mcf5xxx_wr_acr3	(hal_mcf5xxx_lo.s)
  000019F2 00000000 .text   mcf5xxx_wr_acr3	(hal_mcf5xxx_lo.s)
  000019FE 00000000 .text   mcf5xxx_wr_mmubar	(hal_mcf5xxx_lo.s)
  000019FE 00000000 .text   mcf5xxx_wr_mmubar	(hal_mcf5xxx_lo.s)
  00001A0A 00000000 .text   mcf5xxx_wr_other_a7	(hal_mcf5xxx_lo.s)
  00001A0A 00000000 .text   mcf5xxx_wr_other_a7	(hal_mcf5xxx_lo.s)
  00001A16 00000000 .text   mcf5xxx_wr_vbr	(hal_mcf5xxx_lo.s)
  00001A16 00000000 .text   mcf5xxx_wr_vbr	(hal_mcf5xxx_lo.s)
  00001A22 00000000 .text   mcf5xxx_wr_macsr	(hal_mcf5xxx_lo.s)
  00001A22 00000000 .text   mcf5xxx_wr_macsr	(hal_mcf5xxx_lo.s)
  00001A2E 00000000 .text   mcf5xxx_wr_mask	(hal_mcf5xxx_lo.s)
  00001A2E 00000000 .text   mcf5xxx_wr_mask	(hal_mcf5xxx_lo.s)
  00001A3A 00000000 .text   mcf5xxx_wr_acc0	(hal_mcf5xxx_lo.s)
  00001A3A 00000000 .text   mcf5xxx_wr_acc0	(hal_mcf5xxx_lo.s)
  00001A46 00000000 .text   mcf5xxx_wr_accext01	(hal_mcf5xxx_lo.s)
  00001A46 00000000 .text   mcf5xxx_wr_accext01	(hal_mcf5xxx_lo.s)
  00001A52 00000000 .text   mcf5xxx_wr_accext23	(hal_mcf5xxx_lo.s)
  00001A52 00000000 .text   mcf5xxx_wr_accext23	(hal_mcf5xxx_lo.s)
  00001A5E 00000000 .text   mcf5xxx_wr_acc1	(hal_mcf5xxx_lo.s)
  00001A5E 00000000 .text   mcf5xxx_wr_acc1	(hal_mcf5xxx_lo.s)
  00001A6A 00000000 .text   mcf5xxx_wr_acc2	(hal_mcf5xxx_lo.s)
  00001A6A 00000000 .text   mcf5xxx_wr_acc2	(hal_mcf5xxx_lo.s)
  00001A76 00000000 .text   mcf5xxx_wr_acc3	(hal_mcf5xxx_lo.s)
  00001A76 00000000 .text   mcf5xxx_wr_acc3	(hal_mcf5xxx_lo.s)
  00001A82 00000000 .text   mcf5xxx_wr_pc	(hal_mcf5xxx_lo.s)
  00001A82 00000000 .text   mcf5xxx_wr_pc	(hal_mcf5xxx_lo.s)
  00001A8E 00000000 .text   mcf5xxx_wr_rombar0	(hal_mcf5xxx_lo.s)
  00001A8E 00000000 .text   mcf5xxx_wr_rombar0	(hal_mcf5xxx_lo.s)
  00001A9A 00000000 .text   mcf5xxx_wr_rombar1	(hal_mcf5xxx_lo.s)
  00001A9A 00000000 .text   mcf5xxx_wr_rombar1	(hal_mcf5xxx_lo.s)
  00001AA6 00000000 .text   mcf5xxx_wr_rambar0	(hal_mcf5xxx_lo.s)
  00001AA6 00000000 .text   mcf5xxx_wr_rambar0	(hal_mcf5xxx_lo.s)
  00001AB2 00000000 .text   mcf5xxx_wr_rambar1	(hal_mcf5xxx_lo.s)
  00001AB2 00000000 .text   mcf5xxx_wr_rambar1	(hal_mcf5xxx_lo.s)
  00001ABE 00000000 .text   mcf5xxx_wr_mpcr	(hal_mcf5xxx_lo.s)
  00001ABE 00000000 .text   mcf5xxx_wr_mpcr	(hal_mcf5xxx_lo.s)
  00001ACA 00000000 .text   mcf5xxx_wr_secmbar	(hal_mcf5xxx_lo.s)
  00001ACA 00000000 .text   mcf5xxx_wr_secmbar	(hal_mcf5xxx_lo.s)
  00001AD6 00000000 .text   mcf5xxx_wr_mbar	(hal_mcf5xxx_lo.s)
  00001AD6 00000000 .text   mcf5xxx_wr_mbar	(hal_mcf5xxx_lo.s)
  00001AE4 00000030 .text   __copy_rom_section	(startcf.c)
  00001B14 0000003A .text   __copy_rom_sections_to_ram	(startcf.c)
  00001B4E 000000B0 .text   clear_mem	(startcf.c)
  00001BFE 000000B4 .text   _startup	(startcf.c)
  00001CB2 000000CE .text   halXhpInit	(hal_xhp.c)
  00001D80 00000054 .text   canBsHpPut	(hal_xhp.c)
  00001DD4 00000074 .text   halXhpWrite	(hal_xhp.c)
  00001E48 00000074 .text   halXhpRead	(hal_xhp.c)
  00001EBC 00000118 .text   comXhpRx_handler	(hal_xhp.c)
  00001FD4 0000007C .text   comXhpTx_handler	(hal_xhp.c)
  00002050 000000E8 .text   uart_init	(uart_support.c)
  00002138 00000018 .text   InitializeUART	(uart_support.c)
  00002150 0000002A .text   ReadUARTN	(uart_support.c)
  0000217A 0000002E .text   WriteUARTN	(uart_support.c)
  000021A8 00000036 .text   comXhpRxInternal	(r_ex_c.c)
  000021DE 00000036 .text   comXhpTxInternal	(r_ex_c.c)
  00002214 00000050 .text   redStartInternal	(r_ex_c.c)
  00002264 00000056 .text   blinkyReschedInternal	(r_ex_c.c)
  000022BA 00000056 .text   blinky0Internal	(r_ex_c.c)
  00002310 00000056 .text   blinky1Internal	(r_ex_c.c)
  00002366 00000056 .text   blinky2Internal	(r_ex_c.c)
  000023BC 00000056 .text   blinky3Internal	(r_ex_c.c)
  00002412 00000038 .text   redScheduleBlinky0_0	(r_ex_c.c)
  0000244A 00000024 .text   redScheduleBlinky0_5	(r_ex_c.c)
  0000246E 00000024 .text   redScheduleBlinky0_10	(r_ex_c.c)
  00002492 00000024 .text   redScheduleBlinky0_15	(r_ex_c.c)
  000024B6 00000024 .text   redScheduleBlinky0_20	(r_ex_c.c)
  000024DA 00000024 .text   redScheduleBlinky0_25	(r_ex_c.c)
  000024FE 00000024 .text   redScheduleBlinky0_30	(r_ex_c.c)
  00002522 00000024 .text   redScheduleBlinky0_35	(r_ex_c.c)
  00002546 00000024 .text   redScheduleBlinky0_40	(r_ex_c.c)
  0000256A 00000024 .text   redScheduleBlinky0_45	(r_ex_c.c)
  0000258E 00000024 .text   redScheduleBlinky0_50	(r_ex_c.c)
  000025B2 00000024 .text   redScheduleBlinky0_55	(r_ex_c.c)
  000025D6 00000024 .text   redScheduleBlinky0_60	(r_ex_c.c)
  000025FA 00000024 .text   redScheduleBlinky0_65	(r_ex_c.c)
  0000261E 00000024 .text   redScheduleBlinky0_70	(r_ex_c.c)
  00002642 00000024 .text   redScheduleBlinky0_75	(r_ex_c.c)
  00002666 00000024 .text   redScheduleBlinky0_80	(r_ex_c.c)
  0000268A 00000024 .text   redScheduleBlinky0_85	(r_ex_c.c)
  000026AE 00000024 .text   redScheduleBlinky0_90	(r_ex_c.c)
  000026D2 00000012 .text   redScheduleBlinky0_95	(r_ex_c.c)
  000026E4 00000032 .text   redSchedule2_0	(r_ex_c.c)
  00002716 00000024 .text   redSchedule2_5	(r_ex_c.c)
  0000273A 00000024 .text   redSchedule2_10	(r_ex_c.c)
  0000275E 00000024 .text   redSchedule2_15	(r_ex_c.c)
  00002782 00000024 .text   redSchedule2_20	(r_ex_c.c)
  000027A6 00000024 .text   redSchedule2_25	(r_ex_c.c)
  000027CA 00000024 .text   redSchedule2_30	(r_ex_c.c)
  000027EE 00000024 .text   redSchedule2_35	(r_ex_c.c)
  00002812 00000024 .text   redSchedule2_40	(r_ex_c.c)
  00002836 00000024 .text   redSchedule2_45	(r_ex_c.c)
  0000285A 0000002A .text   redSchedule2_50	(r_ex_c.c)
  00002884 00000024 .text   redSchedule2_55	(r_ex_c.c)
  000028A8 00000024 .text   redSchedule2_60	(r_ex_c.c)
  000028CC 00000024 .text   redSchedule2_65	(r_ex_c.c)
  000028F0 00000024 .text   redSchedule2_70	(r_ex_c.c)
  00002914 0000002A .text   redSchedule2_75	(r_ex_c.c)
  0000293E 00000024 .text   redSchedule2_80	(r_ex_c.c)
  00002962 00000024 .text   redSchedule2_85	(r_ex_c.c)
  00002986 00000024 .text   redSchedule2_90	(r_ex_c.c)
  000029AA 00000024 .text   redSchedule2_95	(r_ex_c.c)
  000029CE 0000002E .text   redSchedule2_100	(r_ex_c.c)
  000029FC 00000024 .text   redSchedule2_105	(r_ex_c.c)
  00002A20 00000024 .text   redSchedule2_110	(r_ex_c.c)
  00002A44 00000024 .text   redSchedule2_115	(r_ex_c.c)
  00002A68 00000024 .text   redSchedule2_120	(r_ex_c.c)
  00002A8C 00000026 .text   redSchedule2_125	(r_ex_c.c)
  00002AB2 00000026 .text   redSchedule2_130	(r_ex_c.c)
  00002AD8 00000026 .text   redSchedule2_135	(r_ex_c.c)
  00002AFE 00000026 .text   redSchedule2_140	(r_ex_c.c)
  00002B24 00000026 .text   redSchedule2_145	(r_ex_c.c)
  00002B4A 00000030 .text   redSchedule2_150	(r_ex_c.c)
  00002B7A 00000026 .text   redSchedule2_155	(r_ex_c.c)
  00002BA0 00000026 .text   redSchedule2_160	(r_ex_c.c)
  00002BC6 00000026 .text   redSchedule2_165	(r_ex_c.c)
  00002BEC 00000026 .text   redSchedule2_170	(r_ex_c.c)
  00002C12 00000026 .text   redSchedule2_175	(r_ex_c.c)
  00002C38 00000026 .text   redSchedule2_180	(r_ex_c.c)
  00002C5E 00000026 .text   redSchedule2_185	(r_ex_c.c)
  00002C84 00000026 .text   redSchedule2_190	(r_ex_c.c)
  00002CAA 00000012 .text   redSchedule2_195	(r_ex_c.c)
  00002CBC 0000004A .text   redSchedule3_0	(r_ex_c.c)
  00002D06 00000024 .text   redSchedule3_5	(r_ex_c.c)
  00002D2A 00000024 .text   redSchedule3_10	(r_ex_c.c)
  00002D4E 00000024 .text   redSchedule3_15	(r_ex_c.c)
  00002D72 00000024 .text   redSchedule3_20	(r_ex_c.c)
  00002D96 00000024 .text   redSchedule3_25	(r_ex_c.c)
  00002DBA 00000024 .text   redSchedule3_30	(r_ex_c.c)
  00002DDE 00000024 .text   redSchedule3_35	(r_ex_c.c)
  00002E02 00000024 .text   redSchedule3_40	(r_ex_c.c)
  00002E26 00000024 .text   redSchedule3_45	(r_ex_c.c)
  00002E4A 00000024 .text   redSchedule3_50	(r_ex_c.c)
  00002E6E 00000024 .text   redSchedule3_55	(r_ex_c.c)
  00002E92 00000024 .text   redSchedule3_60	(r_ex_c.c)
  00002EB6 00000024 .text   redSchedule3_65	(r_ex_c.c)
  00002EDA 00000024 .text   redSchedule3_70	(r_ex_c.c)
  00002EFE 00000024 .text   redSchedule3_75	(r_ex_c.c)
  00002F22 00000024 .text   redSchedule3_80	(r_ex_c.c)
  00002F46 00000024 .text   redSchedule3_85	(r_ex_c.c)
  00002F6A 00000024 .text   redSchedule3_90	(r_ex_c.c)
  00002F8E 00000024 .text   redSchedule3_95	(r_ex_c.c)
  00002FB2 00000024 .text   redSchedule3_100	(r_ex_c.c)
  00002FD6 00000024 .text   redSchedule3_105	(r_ex_c.c)
  00002FFA 00000024 .text   redSchedule3_110	(r_ex_c.c)
  0000301E 00000024 .text   redSchedule3_115	(r_ex_c.c)
  00003042 00000024 .text   redSchedule3_120	(r_ex_c.c)
  00003066 00000026 .text   redSchedule3_125	(r_ex_c.c)
  0000308C 00000026 .text   redSchedule3_130	(r_ex_c.c)
  000030B2 00000026 .text   redSchedule3_135	(r_ex_c.c)
  000030D8 00000026 .text   redSchedule3_140	(r_ex_c.c)
  000030FE 00000026 .text   redSchedule3_145	(r_ex_c.c)
  00003124 00000026 .text   redSchedule3_150	(r_ex_c.c)
  0000314A 00000026 .text   redSchedule3_155	(r_ex_c.c)
  00003170 00000026 .text   redSchedule3_160	(r_ex_c.c)
  00003196 00000026 .text   redSchedule3_165	(r_ex_c.c)
  000031BC 00000026 .text   redSchedule3_170	(r_ex_c.c)
  000031E2 00000026 .text   redSchedule3_175	(r_ex_c.c)
  00003208 00000026 .text   redSchedule3_180	(r_ex_c.c)
  0000322E 00000026 .text   redSchedule3_185	(r_ex_c.c)
  00003254 00000026 .text   redSchedule3_190	(r_ex_c.c)
  0000327A 00000012 .text   redSchedule3_195	(r_ex_c.c)
  0000328C 00000032 .text   redScheduleStart_0	(r_ex_c.c)
  000032BE 00000012 .text   redScheduleStart_5	(r_ex_c.c)
  000032D0 0000002E .text   xhpHandlerRxInternal	(r_ex_c.c)
  000032FE 0000002E .text   xhpHandlerTxInternal	(r_ex_c.c)
  0000332C 00000042 .text   bsRubusInit	(r_ex_c.c)
  0000336E 00000036 .text   rubusIdleMain	(main.c)
  000033A4 00000030 .text   main	(main.c)
  000033D4 00000018 .text   blueError	(errors.c)
  000033EC 00000058 .text   redError	(errors.c)
  00003444 0000003C .text   redStartMain	(red.c)
  00003480 0000004A .text   blinkyReschedMain	(red.c)
  000034CA 00000020 .text   blinky0Main	(red.c)
  000034EA 00000020 .text   blinky1Main	(red.c)
  0000350A 00000020 .text   blinky2Main	(red.c)
  0000352A 00000020 .text   blinky3Main	(red.c)
  0000354C 0000000C .text   bsMemResetN	(rubusOS-ColdFireV2.a bs_clib.o      )
  00003558 0000007C .text   bsStackInit	(rubusOS-ColdFireV2.a bs_basic.o     )
  000035D4 00000034 .text   bsStackCheck	(rubusOS-ColdFireV2.a bs_basic.o     )
  00003608 00000020 .text   bsStackUsed	(rubusOS-ColdFireV2.a bs_basic.o     )
  00003628 00000034 .text   bsInit	(rubusOS-ColdFireV2.a bs_basic.o     )
  0000365C 00000060 .text   bsGetObjects	(rubusOS-ColdFireV2.a bs_basic.o     )
  000036BC 00000054 .text   bsResourceNext	(rubusOS-ColdFireV2.a bs_basic.o     )
  00003710 00000060 .text   bsLogInit	(rubusOS-ColdFireV2.a bs_log.o       )
  00003770 00000078 .text   bsLogStatus	(rubusOS-ColdFireV2.a bs_log.o       )
  000037E8 00000070 .text   bsLogStart	(rubusOS-ColdFireV2.a bs_log.o       )
  00003858 00000070 .text   bsLogStop	(rubusOS-ColdFireV2.a bs_log.o       )
  000038C8 00000028 .text   bsLogSet	(rubusOS-ColdFireV2.a bs_log.o       )
  000038F0 00000058 .text   bsLogSetAll	(rubusOS-ColdFireV2.a bs_log.o       )
  00003948 0000008C .text   bsLogGet	(rubusOS-ColdFireV2.a bs_log.o       )
  000039D4 00000090 .text   bsLogPutElm	(rubusOS-ColdFireV2.a bs_log.o       )
  00003A64 0000002C .text   bsLogPut	(rubusOS-ColdFireV2.a bs_log.o       )
  00003A90 00000018 .text   bsB32ToString	(rubusOS-ColdFireV2.a bs_services.o  )
  00003AA8 00000010 .text   bsB16ToString	(rubusOS-ColdFireV2.a bs_services.o  )
  00003AB8 00000010 .text   bsStringToB16	(rubusOS-ColdFireV2.a bs_services.o  )
  00003AC8 00000030 .text   greenThreadInit	(rubusOS-ColdFireV2.a g_thread.o     )
  00003AF8 00000048 .text   greenInit	(rubusOS-ColdFireV2.a g_thread.o     )
  00003B40 00000008 .text   greenIntrDisable	(rubusOS-ColdFireV2.a g_thread.o     )
  00003B48 00000030 .text   redValidateSchedule	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003B78 00000028 .text   redActivateSchedule	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003BA0 00000030 .text   redThreadInit	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003BD0 000000B8 .text   redInit	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003C88 0000002C .text   redSetSchedule	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003CB4 00000064 .text   redSetScheduleImmediate	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003D18 0000003C .text   redStackUsed	(rubusOS-ColdFireV2.a r_kernel.o     )
  00003D54 000000D0 .text   redNotify	(rubusOS-ColdFireV2.a r_kernelmode.o )
  00003E24 00000044 .text   redNested	(rubusOS-ColdFireV2.a r_kernelmode.o )
  00003E68 000000EC .text   blueInit	(rubusOS-ColdFireV2.a b_kernel.o     )
  00003F54 0000003C .text   blueStackUsed	(rubusOS-ColdFireV2.a b_kernel.o     )
  00003F90 00000080 .text   blueIntrCheck	(rubusOS-ColdFireV2.a b_kernelmode.o )
  00004010 00000014 .text   blueKernelEnter	(rubusOS-ColdFireV2.a b_kernelmode.o )
  00004024 00000074 .text   blueKernelExit	(rubusOS-ColdFireV2.a b_kernelmode.o )
  00004098 00000060 .text   blueResume	(rubusOS-ColdFireV2.a b_kernelmode.o )
  000040F8 0000007C .text   blueKernelEntry	(rubusOS-ColdFireV2.a b_kernelthread.)
  00004174 0000000C .text   bluePreemptionLock	(rubusOS-ColdFireV2.a b_policy.o     )
  00004180 00000064 .text   blueUnBlock	(rubusOS-ColdFireV2.a b_policy.o     )
  000041E4 0000003C .text   blueIntSignalInterrupt	(rubusOS-ColdFireV2.a b_signal.o     )
  00004220 000000C4 .text   blueActivate	(rubusOS-ColdFireV2.a b_signal.o     )
  000042E4 00000090 .text   blueSpawn	(rubusOS-ColdFireV2.a b_thread.o     )
  00004374 000000B4 .text   blueCreate	(rubusOS-ColdFireV2.a b_thread.o     )
  00004428 0000005C .text   blueThreadInitAll	(rubusOS-ColdFireV2.a b_thread.o     )
  00004484 0000001C .text   bsRubusStart	(rubusOS-ColdFireV2.a hal_basic.o    )
  000044A0 00000028 .text   halBsInit	(rubusOS-ColdFireV2.a hal_basic.o    )
  000044C8 00000014 .text   greenEnter	(rubusOS-ColdFireV2.a hal_basic.o    )
  000044DC 0000004C .text   greenExit	(rubusOS-ColdFireV2.a hal_basic.o    )
  00004528 00000004 .text   halGreenIntrGet	(rubusOS-ColdFireV2.a hal_basic.o    )
  0000452C 00000010 .text   halGreenIntrSet	(rubusOS-ColdFireV2.a hal_basic.o    )
  0000453C 00000014 .text   halGreenIntrEnable	(rubusOS-ColdFireV2.a hal_basic.o    )
  00004550 00000014 .text   halGreenIntrDisable	(rubusOS-ColdFireV2.a hal_basic.o    )
  00004564 0000001C .text   halRedStackInit	(rubusOS-ColdFireV2.a hal_red.o      )
  00004580 00000094 .text   halBsTimerIntrEntry	(rubusOS-ColdFireV2.a hal_reddispatch)
  00004614 000000A0 .text   halRedDispatch	(rubusOS-ColdFireV2.a hal_reddispatch)
  000046B4 00000040 .text   halRedExitInternal	(rubusOS-ColdFireV2.a hal_reddispatch)
  000046F4 00000010 .text   halRedIntrContextExit	(rubusOS-ColdFireV2.a hal_reddispatch)
  00004704 0000002C .text   halBlueThreadInit	(rubusOS-ColdFireV2.a hal_blue.o     )
  00004730 0000001C .text   halBlueStackInit	(rubusOS-ColdFireV2.a hal_blue.o     )
  0000474C 00000030 .text   halBlueTLFindNext	(rubusOS-ColdFireV2.a hal_blue.o     )
  0000477C 0000002C .text   halBlueDispatchStackCheck	(rubusOS-ColdFireV2.a hal_bluedispatc)
  000047A8 0000004C .text   halBlueDispatchSuspend	(rubusOS-ColdFireV2.a hal_bluedispatc)
  000047F4 000000C8 .text   halBlueDispatchNext	(rubusOS-ColdFireV2.a hal_bluedispatc)
  000048BC 00000038 .text   halBlueDispatch	(rubusOS-ColdFireV2.a hal_bluedispatc)
  000048F4 00000010 .text   halBlueResumeKT	(rubusOS-ColdFireV2.a hal_bluedispatc)
  00004904 00000024 .text   blueTLInit	(rubusOS-ColdFireV2.a b_rqmulti.o    )
  00004928 00000048 .text   blueTLInsertHead	(rubusOS-ColdFireV2.a b_rqmulti.o    )
  00004970 00000070 .text   blueTLInsertTail	(rubusOS-ColdFireV2.a b_rqmulti.o    )
  000049E0 000000A4 .text   blueTLGet	(rubusOS-ColdFireV2.a b_rqmulti.o    )
  00004A84 000003EA .text   __num2dec	(libm.a ansi_fp.o      )
  00004E6E 000000AE .text   frexp	(libm.a s_frexp.o      )
  00004F1C 0000000E .text   __signbitd	(libm.a math_api.o     )
  00004F2A 00000050 .text   __fpclassifyd	(libm.a math_api.o     )
  00004F7A 00000020 .text   __prep_buffer	(libc.a buffer_io.o    )
  00004F9A 00000060 .text   __flush_buffer	(libc.a buffer_io.o    )
  00004FFA 000001B0 .text   __fwrite	(libc.a direct_io.o    )
  000051AA 00000026 .text   isupper	(libc.a file_io.o      )
  000051D0 00000012 .text   memcpy	(libc.a mem.o          )
  000051E2 00000020 .text   memchr	(libc.a mem.o          )
  00005202 00000030 .text   __FileWrite	(libc.a printf.o       )
  00005232 00000024 .text   printf	(libc.a printf.o       )
  00005258 00000010 .text   strlen	(libc.a string.o       )
  00005268 0000000C .text   strcpy	(libc.a string.o       )
  00005274 00000030 .text   strchr	(libc.a string.o       )
  000052A4 00000026 .text   isdigit	(libc.a strtold.o      )
  000052CA 0000033C .text   parse_format	(libc.a printformat_fp.)
  00005606 0000002A .text   set_base	(libc.a printformat_fp.)
  00005630 000000D6 .text   justify_conversion	(libc.a printformat_fp.)
  00005706 00000114 .text   long2str	(libc.a printformat_fp.)
  0000581A 000000E0 .text   __round_decimal	(libc.a printformat_fp.)
  000058FA 00000420 .text   float2str	(libc.a printformat_fp.)
  00005D1A 00000474 .text   __pformatterFP	(libc.a printformat_fp.)
  0000618E 00000020 .text   __init_uart_console	(libc.a uart_console_io)
  000061AE 00000068 .text   __read_console	(libc.a uart_console_io)
  00006216 0000002E .text   __write_console	(libc.a uart_console_io)
  00006244 00000004 .text   __close_console	(libc.a uart_console_io)
  00006248 00000032 .text   .text	(fp_coldfire.a basic.o        )
  00006248 00000000 .text   _f_neg	(fp_coldfire.a basic.o        )
  00006254 00000000 .text   _d_neg	(fp_coldfire.a basic.o        )
  0000626A 00000000 .text   _d_qtod	(fp_coldfire.a basic.o        )
  0000626A 00000000 .text   _d_dtoq	(fp_coldfire.a basic.o        )
  0000627C 00000000 .text   _d_add	(fp_coldfire.a dadd.o         )
  0000627C 00000614 .text   .text	(fp_coldfire.a dadd.o         )
  000064AC 00000000 .text   _d_sub	(fp_coldfire.a dadd.o         )
  00006890 00000000 .text   _d_cmp	(fp_coldfire.a dcompare.o     )
  00006890 0000015E .text   .text	(fp_coldfire.a dcompare.o     )
  0000689A 00000000 .text   _d_cmpe	(fp_coldfire.a dcompare.o     )
  000068A4 00000000 .text   _d_feq	(fp_coldfire.a dcompare.o     )
  000068AA 00000000 .text   _d_fne	(fp_coldfire.a dcompare.o     )
  000068B0 00000000 .text   _d_flt	(fp_coldfire.a dcompare.o     )
  000068B6 00000000 .text   _d_fle	(fp_coldfire.a dcompare.o     )
  000068BC 00000000 .text   _d_fgt	(fp_coldfire.a dcompare.o     )
  000068C2 00000000 .text   _d_fge	(fp_coldfire.a dcompare.o     )
  000068CC 00000000 .text   _d_fun	(fp_coldfire.a dcompare.o     )
  000068D2 00000000 .text   _d_for	(fp_coldfire.a dcompare.o     )
  000069F0 00000000 .text   _d_div	(fp_coldfire.a ddiv.o         )
  000069F0 00000434 .text   .text	(fp_coldfire.a ddiv.o         )
  00006E24 00000000 .text   _d_mul	(fp_coldfire.a dmul.o         )
  00006E24 00000598 .text   .text	(fp_coldfire.a dmul.o         )
  000073BC 00000056 .text   .text	(fp_coldfire.a dterminals.o   )
  000073BC 00000000 .text   _fp_d_rounding	(fp_coldfire.a dterminals.o   )
  000073E4 00000000 .text   _fp_d_underflow	(fp_coldfire.a dterminals.o   )
  000073F8 00000000 .text   _fp_d_overflow	(fp_coldfire.a dterminals.o   )
  00007414 00000000 .text   _d_dtoi	(fp_coldfire.a dtoi.o         )
  00007414 0000008E .text   .text	(fp_coldfire.a dtoi.o         )
  000074A4 00000000 .text   _d_utod	(fp_coldfire.a int_to_d.o     )
  000074A4 00000136 .text   .text	(fp_coldfire.a int_to_d.o     )
  000074EA 00000000 .text   _d_itod	(fp_coldfire.a int_to_d.o     )
  00007506 00000000 .text   _d_ulltod	(fp_coldfire.a int_to_d.o     )
  00007598 00000000 .text   _d_lltod	(fp_coldfire.a int_to_d.o     )
  000075DC 00000010 .rodata xhpCmdTableCtrl	(ros_xhpCmdCtrl.c)
  000075EC 00000004 .rodata xhpCmdTableCtrlPtr	(ros_xhpCmdCtrl.c)
  000075F0 00000048 .rodata xhpCmdTableOs	(ros_xhpCmdCtrl.c)
  00007638 00000004 .rodata xhpCmdTableOsPtr	(ros_xhpCmdCtrl.c)
  0000763C 00000010 .rodata xhpHandlerAttr	(hal_xhp.c)
  0000764C 00000004 .rodata canMaskGlobal	(hal_xhp.c)
  00007650 00000006 .rodata canBaud	(hal_xhp.c)
  00007658 0000000C .rodata greenAttr	(r_ex_s.c)
  00007664 0000001C .rodata comXhpRx	(r_ex_s.c)
  00007680 0000001C .rodata comXhpTx	(r_ex_s.c)
  0000769C 00000020 .rodata redAttr	(r_ex_s.c)
  000076BC 0000000C .rodata redStart	(r_ex_s.c)
  000076C8 0000000C .rodata blinkyResched	(r_ex_s.c)
  000076D4 0000000C .rodata blinky0	(r_ex_s.c)
  000076E0 0000000C .rodata blinky1	(r_ex_s.c)
  000076EC 0000000C .rodata blinky2	(r_ex_s.c)
  000076F8 0000000C .rodata blinky3	(r_ex_s.c)
  00007704 00000010 .rodata redScheduleBlinky0	(r_ex_s.c)
  00007714 00000010 .rodata redSchedule2	(r_ex_s.c)
  00007724 00000010 .rodata redSchedule3	(r_ex_s.c)
  00007734 00000010 .rodata redScheduleStart	(r_ex_s.c)
  00007744 00000014 .rodata blueAttr	(r_ex_s.c)
  00007758 00000020 .rodata blueKernel	(r_ex_s.c)
  00007778 00000020 .rodata xhpHandlerRx	(r_ex_s.c)
  00007798 00000020 .rodata xhpHandlerTx	(r_ex_s.c)
  000077B8 00000020 .rodata blueIdle	(r_ex_s.c)
  000077D8 00000007 .rodata @86	(r_ex_s.c)
  000077DF 0000000A .rodata @87	(r_ex_s.c)
  000077E9 0000000A .rodata @88	(r_ex_s.c)
  000077F3 00000009 .rodata @89	(r_ex_s.c)
  000077FC 00000009 .rodata @90	(r_ex_s.c)
  00007805 00000009 .rodata @91	(r_ex_s.c)
  0000780E 0000000D .rodata @92	(r_ex_s.c)
  0000781B 0000000D .rodata @93	(r_ex_s.c)
  00007828 0000000B .rodata @94	(r_ex_s.c)
  00007833 00000009 .rodata @95	(r_ex_s.c)
  0000783C 00000008 .rodata @96	(r_ex_s.c)
  00007844 00000009 .rodata @97	(r_ex_s.c)
  0000784D 0000000E .rodata @98	(r_ex_s.c)
  0000785B 00000008 .rodata @99	(r_ex_s.c)
  00007863 00000008 .rodata @100	(r_ex_s.c)
  0000786B 00000008 .rodata @101	(r_ex_s.c)
  00007873 00000008 .rodata @102	(r_ex_s.c)
  0000787B 00000013 .rodata @103	(r_ex_s.c)
  0000788E 0000000D .rodata @104	(r_ex_s.c)
  0000789B 0000000D .rodata @105	(r_ex_s.c)
  000078A8 00000011 .rodata @106	(r_ex_s.c)
  000078BC 000000A8 .rodata bsIdNameTable	(r_ex_s.c)
  00007964 00000014 .rodata @107	(r_ex_s.c)
  00007978 00000004 .rodata bsLabelDate	(r_ex_s.c)
  0000797C 00000020 .rodata @108	(r_ex_s.c)
  0000799C 00000004 .rodata bsLabelCoder	(r_ex_s.c)
  000079A0 00000025 .rodata @109	(r_ex_s.c)
  000079C8 00000004 .rodata bsLabelIdentifier	(r_ex_s.c)
  000079CC 00000054 .rodata bsIdTable	(r_ex_s.c)
  00007A20 00000040 .rodata bsAttr	(r_ex_s.c)
  00007A60 00000014 .rodata bsLogAttr	(r_ex_s.c)
  00007A74 00000004 .rodata blueIntrTableTop	(r_ex_d.c)
  00007A78 00000004 .rodata blueIntrTableBottom	(r_ex_d.c)
  00007A7C 00000015 .rodata @91	(errors.c)
  00007A91 0000005F .rodata @93	(rubusOS-ColdFireV2.a bs_label.o     )
  00007AF0 00000004 .rodata bsOSLabel	(rubusOS-ColdFireV2.a bs_label.o     )
  00007AF4 00000048 .rodata bit_values	(libm.a ansi_fp.o      )
  00007B3C 00000040 .rodata digit_values	(libm.a ansi_fp.o      )
  00007B7C 00000081 .rodata _ctypes_	(libc.a ctype.o        )
  00007BFD 00000005 .rodata @827	(libc.a printformat_fp.)
  00007C02 00000005 .rodata @828	(libc.a printformat_fp.)
  00007C07 00000004 .rodata @829	(libc.a printformat_fp.)
  00007C0B 00000004 .rodata @830	(libc.a printformat_fp.)
  00007C0F 00000005 .rodata @831	(libc.a printformat_fp.)
  00007C14 00000005 .rodata @832	(libc.a printformat_fp.)
  00007C19 00000004 .rodata @833	(libc.a printformat_fp.)
  00007C1D 00000004 .rodata @834	(libc.a printformat_fp.)
  00007C21 00000001 .rodata @1100	(libc.a printformat_fp.)
#>00007C24          ___ROM_AT (linker command file)
#>00007C24          ___DATA_ROM (linker command file)
#>00007C24          __S_romp (linker command file)

# .data
#>20000400          ___DATA_RAM (linker command file)
#>20000400          __exception_table_start__ (linker command file)
# Exception index
  20000400 00000000         Exception Table Index	()
#>20000400          __exception_table_end__ (linker command file)
#>20000400          ___sinit__ (linker command file)
# Linker generated symbols
  20000400 00000004         static initializer	(linker generated)
  20000404 000000D8 .data   __files	(libc.a ansi_files.o   )
#>200004E0          ___DATA_END (linker command file)
#>200004E0          __START_SDATA (linker command file)
#>200004E0          __END_SDATA (linker command file)
#>200004E0          __SDA_BASE (linker command file)

# .bss
#>200004E0          ___BSS_START (linker command file)
#>200004E0          __START_SBSS (linker command file)
  200004E0 00000004 .sbss   @LOCAL@__init_uart_console__Fv@initialized	(libc.a uart_console_io)
#>200004E4          __END_SBSS (linker command file)
#>200004E4          __START_BSS (linker command file)
  200004E4 00000001 .bss    xhpStateCB	(ros_xhpCmdCtrl.c)
  200004E8 00000014 .bss    xhpCmdCB	(ros_xhpHandler.c)
  200004FC 00000004 .bss    ioMode	(hal_mcf5213_io.c)
  20000500 00000004 .bss    ioCnt	(hal_mcf5213_io.c)
  20000504 00000004 .bss    halTimerExt	(hal_mcf5213_timer.c)
  20000508 00000004 .bss    halTimerAdjustment	(hal_mcf5213_timer.c)
  2000050C 00000018 .bss    canMsgTx	(hal_xhp.c)
  20000524 00000018 .bss    canMsgRx	(hal_xhp.c)
  2000053C 0000000C .bss    comHandlerTxCB	(hal_xhp.c)
  20000548 0000000C .bss    comHandlerRxCB	(hal_xhp.c)
  20000554 00000201 .bss    xhpBufferWrite	(hal_xhp.c)
  20000755 00000101 .bss    xhpBufferRead	(hal_xhp.c)
  20000858 00002000 .bss    bsLogBuffer	(r_ex_d.c)
  20002858 00000015 .bss    bsLogIdArray	(r_ex_d.c)
  20002870 00000048 .bss    blueIdleCB	(r_ex_d.c)
  200028B8 00000048 .bss    xhpHandlerTxCB	(r_ex_d.c)
  20002900 00000110 .bss    xhpHandlerTxStack	(r_ex_d.c)
  20002A10 00000048 .bss    xhpHandlerRxCB	(r_ex_d.c)
  20002A58 00000110 .bss    xhpHandlerRxStack	(r_ex_d.c)
  20002B68 00000048 .bss    blueKernelCB	(r_ex_d.c)
  20002BB0 00000014 .bss    blueIntrTable	(r_ex_d.c)
  20002BC4 00000410 .bss    blueStack	(r_ex_d.c)
  20002FD4 00000004 .bss    blinky3Args	(r_ex_d.c)
  20002FD8 00000010 .bss    blinky3CB	(r_ex_d.c)
  20002FE8 00000004 .bss    blinky2Args	(r_ex_d.c)
  20002FEC 00000010 .bss    blinky2CB	(r_ex_d.c)
  20002FFC 00000004 .bss    blinky1Args	(r_ex_d.c)
  20003000 00000010 .bss    blinky1CB	(r_ex_d.c)
  20003010 00000004 .bss    blinky0Args	(r_ex_d.c)
  20003014 00000010 .bss    blinky0CB	(r_ex_d.c)
  20003024 00000008 .bss    blinkyReschedArgs	(r_ex_d.c)
  2000302C 00000010 .bss    blinkyReschedCB	(r_ex_d.c)
  2000303C 00000010 .bss    redStartCB	(r_ex_d.c)
  2000304C 00000020 .bss    redStackFrame	(r_ex_d.c)
  2000306C 00000410 .bss    redStack	(r_ex_d.c)
  2000347C 00000014 .bss    comXhpTxCB	(r_ex_d.c)
  20003490 00000014 .bss    comXhpRxCB	(r_ex_d.c)
  200034A4 00000004 .bss    stackBlueUsed	(main.c)
  200034A8 00000004 .bss    stackRedUsed	(main.c)
  200034AC 00000004 .bss    rubusIdleLoop	(main.c)
  200034B0 00000004 .bss    errorObject	(errors.c)
  200034B4 00000004 .bss    errorCode	(errors.c)
  200034B8 00000010 .bss    bsBasicTimerCB	(rubusOS-ColdFireV2.a bs_basicvar.o  )
  200034C8 00000014 .bss    bsLogCB	(rubusOS-ColdFireV2.a bs_basicvar.o  )
  200034DC 00000010 .bss    bsBasicVar	(rubusOS-ColdFireV2.a bs_basicvar.o  )
  200034EC 00000004 .bss    bsKernelMode	(rubusOS-ColdFireV2.a bs_basicvar.o  )
  200034F0 00000020 .bss    redKernelTimeCB	(rubusOS-ColdFireV2.a r_kernelvar.o  )
  20003510 0000000C .bss    redDispatchVar	(rubusOS-ColdFireV2.a r_kernelvar.o  )
  2000351C 00000014 .bss    redKernelVar	(rubusOS-ColdFireV2.a r_kernelvar.o  )
  20003530 00000080 .bss    blueThreadList	(rubusOS-ColdFireV2.a b_kernelvar.o  )
  200035B0 00000008 .bss    blueTimeSupList	(rubusOS-ColdFireV2.a b_kernelvar.o  )
  200035B8 00000020 .bss    blueKernelVar	(rubusOS-ColdFireV2.a b_kernelvar.o  )
#>200035D8          __END_BSS (linker command file)
#>200035D8          ___BSS_END (linker command file)
#>00000000          ___FLASH (linker command file)
#>00040000          ___FLASH_SIZE (linker command file)
#>20000400          ___SRAM (linker command file)
#>00007C00          ___SRAM_SIZE (linker command file)
#>20000000          ___VECTOR_RAM (linker command file)
#>40000000          ___IPSBAR (linker command file)
#>00001000          ___SP_SIZE (linker command file)
#>200035D8          ___HEAP_START (linker command file)
#>20007000          ___HEAP_END (linker command file)
#>20007000          ___SP_END (linker command file)
#>20008000          ___SP_INIT (linker command file)
#>200035D8          ___heap_addr (linker command file)
#>00003A28          ___heap_size (linker command file)
#>20008000          __SP_INIT (linker command file)
#>00000010          ___stack_safety (linker command file)
#>20007000          ___mem_limit (linker command file)
#>00007D04          _romp_at (linker command file)

# .romp
#>00007D04          __S_romp (linker command file)


# Memory map:
  v_addr   p_addr   size     name
  20000000 20000000 00000400            vectorram
  00000000 00000000 00000400 .vectors   vectorrom
  00000400 00000400 00000018 .cfmprotect cfmprotrom
  00000500 00000500 00000000 .code      code
  00000500 00000500 00007724 .text      code
  20000400 00007C24 000000E0 .data      sram
  200004E0 200004E0 000030F8 .bss       sram
  200035D8 00007D04 00000018 .romp      sram
  40000000 40000000 00000000 .ipsbar    ipsbar

# Link start time: Thu Sep 06 14:22:05 2012
# Link end time: Thu Sep 06 14:22:05 2012
